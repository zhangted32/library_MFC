/*
Navicat MySQL Data Transfer
Source Server         : aaaa
Source Server Version : 50625
Source Host           : localhost:3306
Source Database       : test
Target Server Type    : MYSQL
Target Server Version : 50625
File Encoding         : 65001
Date: 2016-06-07 18:20:35
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for book
-- ----------------------------
DROP TABLE IF EXISTS `book`;
CREATE TABLE `book` (
  `ISBN` char(20) NOT NULL,
  `Bname` char(20) DEFAULT NULL,
  `B_edition` char(30) DEFAULT NULL,
  `press` char(20) DEFAULT NULL,
  `B_author` char(20) DEFAULT NULL,
  `B_price` double DEFAULT NULL,
  `B_number` smallint(6) DEFAULT NULL,
  PRIMARY KEY (`ISBN`),
  KEY `press` (`press`),
  CONSTRAINT `book_ibfk_1` FOREIGN KEY (`press`) REFERENCES `press` (`p_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of book
-- ----------------------------
INSERT INTO `book` VALUES ('100001', '彷徨', '3-3', '清华大学出版社', '鲁迅', '99', '20');
INSERT INTO `book` VALUES ('1011', '朝花夕拾', '2-2', '内蒙古大学出版社', '鲁迅', '99', '100');
INSERT INTO `book` VALUES ('209000', '西游记', '1-1', '内蒙古大学出版社', '吴承恩', '10000', '20');
INSERT INTO `book` VALUES ('209001', '红楼梦', '1-2', '清华大学出版社', '曹雪芹', '10001', '0');
INSERT INTO `book` VALUES ('209002', '三国演义', '1-3', '北京大学出版社', '罗贯中', '10002', '20');
INSERT INTO `book` VALUES ('209003', '水浒传', '1-1', '内蒙古大学出版社', '施耐庵', '10003', '10');

-- ----------------------------
-- Table structure for book_order
-- ----------------------------
DROP TABLE IF EXISTS `book_order`;
CREATE TABLE `book_order` (
  `id` int(11) NOT NULL,
  `isbn` char(20) NOT NULL,
  `book_name` char(30) NOT NULL,
  `book_edition` char(30) NOT NULL,
  `press` char(20) NOT NULL,
  `book_author` char(20) NOT NULL,
  `book_price` int(11) NOT NULL,
  `book_number` smallint(6) NOT NULL,
  `book_order_check` tinyint(1) NOT NULL,
  `book_order_name` char(30) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of book_order
-- ----------------------------
INSERT INTO `book_order` VALUES ('1', '1011', '朝花夕拾', '2-2', '内蒙古大学出版社', '鲁迅', '99', '100', '1', 'feiyangyang');
INSERT INTO `book_order` VALUES ('2', '20900', '西游记', '1-1', '内蒙古大学出版社', '吴承恩', '10000', '30', '0', 'feiyangyang');
INSERT INTO `book_order` VALUES ('3', '111', '呐喊', '1-1', '北京大学出版社', '鲁迅', '100', '20', '0', 'huitailang');
INSERT INTO `book_order` VALUES ('4', '209003', '水浒传', '1-1', '内蒙古大学出版社', '施耐庵', '10003', '10', '1', 'huitailang');
INSERT INTO `book_order` VALUES ('5', '209001', '红楼梦', '1-2', '清华大学出版社', '曹雪芹', '10001', '10', '0', 'huitailang');
INSERT INTO `book_order` VALUES ('6', '100001', '彷徨', '3-3', '清华大学出版社', '鲁迅', '99', '20', '1', 'huitailang');

-- ----------------------------
-- Table structure for book_take
-- ----------------------------
DROP TABLE IF EXISTS `book_take`;
CREATE TABLE `book_take` (
  `id` int(11) NOT NULL,
  `isbn` char(20) NOT NULL,
  `book_take_name` char(30) NOT NULL,
  `book_take_num` int(11) NOT NULL,
  `book_take_check` tinyint(1) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `book_take_ibfk_1` (`isbn`),
  CONSTRAINT `book_take_ibfk_1` FOREIGN KEY (`isbn`) REFERENCES `book` (`ISBN`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of book_take
-- ----------------------------
INSERT INTO `book_take` VALUES ('4', '209001', 'feiyangyang', '20', '1');
INSERT INTO `book_take` VALUES ('5', '209000', 'feiyangyang', '20', '0');
INSERT INTO `book_take` VALUES ('6', '209002', 'huitailang', '20', '0');
INSERT INTO `book_take` VALUES ('7', '1011', 'huitailang', '11', '0');
INSERT INTO `book_take` VALUES ('8', '209003', 'huitailang', '20', '1');
INSERT INTO `book_take` VALUES ('9', '209000', 'huitailang', '10', '0');
INSERT INTO `book_take` VALUES ('10', '209001', 'huitailang', '0', '1');
INSERT INTO `book_take` VALUES ('11', '1011', 'huitailang', '50', '0');

-- ----------------------------
-- Table structure for press
-- ----------------------------
DROP TABLE IF EXISTS `press`;
CREATE TABLE `press` (
  `p_name` char(20) NOT NULL,
  `p_phone` char(20) DEFAULT NULL,
  `p_address` char(50) DEFAULT NULL,
  PRIMARY KEY (`p_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of press
-- ----------------------------
INSERT INTO `press` VALUES ('内蒙古大学出版社', '123456', '内蒙古');
INSERT INTO `press` VALUES ('冥王星出版社', '4992237', '冥王星');
INSERT INTO `press` VALUES ('北京大学出版社', '456456', '北京');
INSERT INTO `press` VALUES ('北大出版社', '010000-22222', '北京西四环');
INSERT INTO `press` VALUES ('无锡出版社', '199882', '无锡');
INSERT INTO `press` VALUES ('月球出版社', '12776345431', '月球');
INSERT INTO `press` VALUES ('江苏出版社', '222456', '江苏');
INSERT INTO `press` VALUES ('浙江出版社', '1992223', '浙江');
INSERT INTO `press` VALUES ('清华大学出版社', '123123', '北京');
INSERT INTO `press` VALUES ('画家出版社', '7654321', '四川');
INSERT INTO `press` VALUES ('西安电子科技大学出版社', '789987', '西安');

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `userturename` char(30) DEFAULT NULL,
  `username` char(30) NOT NULL,
  `userpassword` char(20) NOT NULL,
  `userphone` char(30) DEFAULT NULL,
  `userflag` int(11) NOT NULL,
  PRIMARY KEY (`username`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES ('沸羊羊', 'feiyangyang', 'feiyangyang', '021-3632621', '5');
INSERT INTO `user` VALUES ('红太狼', 'honghtailang', 'hongtailang', '031-3638324', '3');
INSERT INTO `user` VALUES ('灰太狼', 'huitailang', 'huitailang', '031-3638221', '5');
INSERT INTO `user` VALUES ('懒羊羊', 'lanyangyang', 'lanyangyang', '021-3632828', '4');
INSERT INTO `user` VALUES ('慢羊羊', 'manyangyang123', 'manyangyang123', '021-3632123', '1');
INSERT INTO `user` VALUES ('美羊羊', 'meiyangyang', 'meiyangyang', '021-3632478', '3');
INSERT INTO `user` VALUES ('小灰灰', 'xiaohuihui', 'xiaohuihui', '031-3638722', '3');
INSERT INTO `user` VALUES ('喜羊羊', 'xiyangyang', 'xiyangyang', '021-3632324', '2');

-- ----------------------------
-- View structure for view2
-- ----------------------------
DROP VIEW IF EXISTS `view2`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost`  VIEW `view2` AS select * from 
user 
where userflag=2 ;

-- ----------------------------
-- View structure for view3
-- ----------------------------
DROP VIEW IF EXISTS `view3`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost`  VIEW `view3` AS select * from 
user 
where userflag='3' ;

-- ----------------------------
-- View structure for view4
-- ----------------------------
DROP VIEW IF EXISTS `view4`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost`  VIEW `view4` AS select * from
user
where userflag=4 ;

-- ----------------------------
-- View structure for view5
-- ----------------------------
DROP VIEW IF EXISTS `view5`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost`  VIEW `view5` AS select * from
user
where userflag=5 ;

-- ----------------------------
-- View structure for view_teacher_look_book_order
-- ----------------------------
DROP VIEW IF EXISTS `view_teacher_look_book_order`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER  VIEW `view_teacher_look_book_order` AS SELECT 
        `book_order`.`isbn` AS `ISBN`,
        `book_order`.`book_name` AS `name`,
        `book_order`.`book_edition` AS `edition`,
        `book_order`.`press` AS `press`,
        `book_order`.`book_author` AS `author`,
        `book_order`.`book_price` AS `price`,
        `book_order`.`book_number` AS `number`,
        `book_order`.`book_order_name` AS `order_name`,
        `book_order`.`book_order_check` AS `check`
    FROM
        `book_order` ;

-- ----------------------------
-- View structure for view_teacher_look_book_take
-- ----------------------------
DROP VIEW IF EXISTS `view_teacher_look_book_take`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER  VIEW `view_teacher_look_book_take` AS SELECT 
        `book`.`ISBN` AS `ISBN`,
        `book_take`.`book_take_name` AS `take_name`,
        `book`.`Bname` AS `Bname`,
        `book`.`B_edition` AS `edition`,
        `book`.`press` AS `press`,
        `book`.`B_author` AS `author`,
        `book`.`B_price` AS `price`,
        `book_take`.`book_take_num` AS `number`,
        `book_take`.`book_take_check` AS `check`
    FROM
        (`book_take`
        JOIN `book`)
    WHERE
        (`book`.`ISBN` = `book_take`.`isbn`) ;
DROP TRIGGER IF EXISTS `book_BEFORE_UPDATE`;
DELIMITER ;;
CREATE TRIGGER `book_BEFORE_UPDATE` BEFORE UPDATE ON `book` FOR EACH ROW BEGIN
if(new.isbn!=old.isbn)
then
update book_take set book_take.isbn=new.isbn
where book_take.isbn=old.isbn;
end if;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `book_BEFORE_DELETE`;
DELIMITER ;;
CREATE TRIGGER `book_BEFORE_DELETE` BEFORE DELETE ON `book` FOR EACH ROW BEGIN
declare i int;
declare isbn_copy char(30);
set isbn_copy=old.ISBN;
select count(*) into i from book_take
where book_take.book_take_check=0 
and book_take.isbn=isbn_copy;
if (i=0)
then 
delete from book_take
where book_take.isbn=isbn_copy;
end if;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `book_order_BEFORE_INSERT`;
DELIMITER ;;
CREATE TRIGGER `book_order_BEFORE_INSERT` BEFORE INSERT ON `book_order` FOR EACH ROW BEGIN
declare i int;
set i=(select max(id) from book_order);
set new.id=i+1;

END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `book_order_AFTER_UPDATE`;
DELIMITER ;;
CREATE TRIGGER `book_order_AFTER_UPDATE` AFTER UPDATE ON `book_order` FOR EACH ROW BEGIN
declare i int;
declare j int;
if(new.book_order_check!=old.book_order_check )
then
if (new.book_order_check=1)
then
select count(*) into i from book where book.isbn=new.isbn;
if(i!=0)
then  
update book set
B_number=B_number+new.book_number
where book.isbn=new.isbn;
else 
select count(*) into j from press
 where p_name=new.press;
 if(j=0)
 then
insert into press (p_name)value(
new.press
);
insert into book values(
new.isbn,new.book_name,new.book_edition,new.press,
new.book_author,new.book_price,new.book_number
);
else
insert into book values(
new.isbn,new.book_name,new.book_edition,new.press,
new.book_author,new.book_price,new.book_number
);
end if;
end if;
end if;
end if;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `book_take_BEFORE_INSERT`;
DELIMITER ;;
CREATE TRIGGER `book_take_BEFORE_INSERT` BEFORE INSERT ON `book_take` FOR EACH ROW BEGIN
declare i int;
select max(id)  into i from book_take;
set new.id=i+1;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `book_take_AFTER_UPDATE`;
DELIMITER ;;
CREATE TRIGGER `book_take_AFTER_UPDATE` AFTER UPDATE ON `book_take` FOR EACH ROW BEGIN
declare i int;
if(new.book_take_check!=old.book_take_check )
then
if( new.book_take_check=1)
then
set i=(select book.B_number
from book,book_take
where book.ISBN=old.isbn and old.book_take_check=0 limit 1)
-new.book_take_num;

if(i>=0)
then
update book set book.B_number=i where book.ISBN=new.isbn;
end if;
end if;
end if;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `press_BEFORE_UPDATE`;
DELIMITER ;;
CREATE TRIGGER `press_BEFORE_UPDATE` BEFORE UPDATE ON `press` FOR EACH ROW BEGIN
if(new.p_name!=old.p_name)
then 
update book set press=new.p_name
where press=old.p_name;
end if;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `user_AFTER_UPDATE`;
DELIMITER ;;
CREATE TRIGGER `user_AFTER_UPDATE` AFTER UPDATE ON `user` FOR EACH ROW BEGIN
if(old.userflag=5)
then
update book_order  
set book_order_name=new.username 
where book_order_name=old.username;
update book_take
set book_take_name=new.username
where book_take_name=old.username;
if(old.userflag=4)
then
update book_order 
set book_order_name=new.username
where book_order_name=old.username;
end if; 
end if;
END
;;
DELIMITER ;